{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\n\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return disableListWrap ? null : list.firstChild;\n}\n\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return disableListWrap ? null : list.lastChild;\n}\n\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n\n  var text = nextFocus.innerText;\n\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n\n  text = text.trim().toLowerCase();\n\n  if (text.length === 0) {\n    return false;\n  }\n\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\n\nfunction moveFocus(list, currentFocus, disableListWrap, traversalFunction, textCriteria) {\n  var wrappedOnce = false;\n  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return false;\n      }\n\n      wrappedOnce = true;\n    } // Move to the next element.\n\n\n    if (!nextFocus.hasAttribute('tabindex') || nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true' || !textCriteriaMatches(nextFocus, textCriteria)) {\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\r\n * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton\r\n * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you\r\n * use it separately you need to move focus into the component manually. Once\r\n * the focus is placed inside the component it is fully keyboard accessible.\r\n */\n\nvar MenuList = React.forwardRef(function MenuList(props, ref) {\n  var actions = props.actions,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$autoFocusItem = props.autoFocusItem,\n      autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem,\n      children = props.children,\n      className = props.className,\n      onKeyDown = props.onKeyDown,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"onKeyDown\", \"disableListWrap\", \"variant\"]);\n\n  var listRef = React.useRef(null);\n  var textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, function () {\n    return {\n      adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {\n        // Let's ignore that piece of logic if users are already overriding the width\n        // of the menu.\n        var noExplicitWidth = !listRef.current.style.width;\n\n        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n          var scrollbarSize = \"\".concat(getScrollbarSize(true), \"px\");\n          listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n          listRef.current.style.width = \"calc(100% + \".concat(scrollbarSize, \")\");\n        }\n\n        return listRef.current;\n      }\n    };\n  }, []);\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var list = listRef.current;\n    var key = event.key;\n    /**\r\n     * @type {Element} - will always be defined since we are in a keydown handler\r\n     * attached to an element. A keydown event is either dispatched to the activeElement\r\n     * or document.body or document.documentElement. Only the first case will\r\n     * trigger this specific handler.\r\n     */\n\n    var currentFocus = ownerDocument(list).activeElement;\n\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, previousItem);\n    } else if (key.length === 1) {\n      var criteria = textCriteriaRef.current;\n      var lowerKey = key.toLowerCase();\n      var currTime = performance.now();\n\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.forEach(children, function (child, index) {\n    if (!React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var items = React.Children.map(children, function (child, index) {\n    if (index === activeItemIndex) {\n      var newChildProps = {};\n\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n\n      if (newChildProps !== null) {\n        return React.cloneElement(child, newChildProps);\n      }\n    }\n\n    return child;\n  });\n  return React.createElement(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other), items);\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes = {\n  /**\r\n   * @ignore\r\n   */\n  actions: PropTypes.shape({\n    current: PropTypes.object\n  }),\n\n  /**\r\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\r\n   * if `variant=\"selectedMenu\"`\r\n   */\n  autoFocusItem: PropTypes.bool,\n\n  /**\r\n   * MenuList contents, normally `MenuItem`s.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the menu items will not wrap focus.\r\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default MenuList;","map":{"version":3,"sources":["C:/Users/flori/Documents/M2-MIAGE/Architecture Orient√©e Service/Projet/bataille_navale/front/node_modules/@material-ui/core/esm/MenuList/MenuList.js"],"names":["_extends","_objectWithoutProperties","React","isFragment","PropTypes","ReactDOM","ownerDocument","List","getScrollbarSize","useForkRef","nextItem","list","item","disableListWrap","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","textCriteriaMatches","nextFocus","textCriteria","undefined","text","innerText","textContent","trim","toLowerCase","length","repeating","keys","indexOf","join","moveFocus","currentFocus","traversalFunction","wrappedOnce","hasAttribute","disabled","getAttribute","focus","useEnhancedEffect","window","useEffect","useLayoutEffect","MenuList","forwardRef","props","ref","actions","_props$autoFocus","autoFocus","_props$autoFocusItem","autoFocusItem","children","className","onKeyDown","_props$disableListWra","_props$variant","variant","other","listRef","useRef","textCriteriaRef","previousKeyMatched","lastTime","current","useImperativeHandle","adjustStyleForScrollbar","containerElement","theme","noExplicitWidth","style","width","clientHeight","scrollbarSize","concat","direction","handleKeyDown","event","key","activeElement","preventDefault","criteria","lowerKey","currTime","performance","now","push","keepFocusOnCurrent","handleOwnRef","useCallback","instance","findDOMNode","handleRef","activeItemIndex","Children","forEach","child","index","isValidElement","process","env","NODE_ENV","console","error","selected","items","map","newChildProps","tabIndex","cloneElement","createElement","role","propTypes","shape","object","bool","node","string","func","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport List from '../List';\r\nimport getScrollbarSize from '../utils/getScrollbarSize';\r\nimport useForkRef from '../utils/useForkRef';\r\n\r\nfunction nextItem(list, item, disableListWrap) {\r\n  if (list === item) {\r\n    return list.firstChild;\r\n  }\r\n\r\n  if (item && item.nextElementSibling) {\r\n    return item.nextElementSibling;\r\n  }\r\n\r\n  return disableListWrap ? null : list.firstChild;\r\n}\r\n\r\nfunction previousItem(list, item, disableListWrap) {\r\n  if (list === item) {\r\n    return disableListWrap ? list.firstChild : list.lastChild;\r\n  }\r\n\r\n  if (item && item.previousElementSibling) {\r\n    return item.previousElementSibling;\r\n  }\r\n\r\n  return disableListWrap ? null : list.lastChild;\r\n}\r\n\r\nfunction textCriteriaMatches(nextFocus, textCriteria) {\r\n  if (textCriteria === undefined) {\r\n    return true;\r\n  }\r\n\r\n  var text = nextFocus.innerText;\r\n\r\n  if (text === undefined) {\r\n    // jsdom doesn't support innerText\r\n    text = nextFocus.textContent;\r\n  }\r\n\r\n  text = text.trim().toLowerCase();\r\n\r\n  if (text.length === 0) {\r\n    return false;\r\n  }\r\n\r\n  if (textCriteria.repeating) {\r\n    return text[0] === textCriteria.keys[0];\r\n  }\r\n\r\n  return text.indexOf(textCriteria.keys.join('')) === 0;\r\n}\r\n\r\nfunction moveFocus(list, currentFocus, disableListWrap, traversalFunction, textCriteria) {\r\n  var wrappedOnce = false;\r\n  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\r\n\r\n  while (nextFocus) {\r\n    // Prevent infinite loop.\r\n    if (nextFocus === list.firstChild) {\r\n      if (wrappedOnce) {\r\n        return false;\r\n      }\r\n\r\n      wrappedOnce = true;\r\n    } // Move to the next element.\r\n\r\n\r\n    if (!nextFocus.hasAttribute('tabindex') || nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true' || !textCriteriaMatches(nextFocus, textCriteria)) {\r\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\r\n    } else {\r\n      nextFocus.focus();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\r\n/**\r\n * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton\r\n * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you\r\n * use it separately you need to move focus into the component manually. Once\r\n * the focus is placed inside the component it is fully keyboard accessible.\r\n */\r\n\r\nvar MenuList = React.forwardRef(function MenuList(props, ref) {\r\n  var actions = props.actions,\r\n      _props$autoFocus = props.autoFocus,\r\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\r\n      _props$autoFocusItem = props.autoFocusItem,\r\n      autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem,\r\n      children = props.children,\r\n      className = props.className,\r\n      onKeyDown = props.onKeyDown,\r\n      _props$disableListWra = props.disableListWrap,\r\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"onKeyDown\", \"disableListWrap\", \"variant\"]);\r\n\r\n  var listRef = React.useRef(null);\r\n  var textCriteriaRef = React.useRef({\r\n    keys: [],\r\n    repeating: true,\r\n    previousKeyMatched: true,\r\n    lastTime: null\r\n  });\r\n  useEnhancedEffect(function () {\r\n    if (autoFocus) {\r\n      listRef.current.focus();\r\n    }\r\n  }, [autoFocus]);\r\n  React.useImperativeHandle(actions, function () {\r\n    return {\r\n      adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {\r\n        // Let's ignore that piece of logic if users are already overriding the width\r\n        // of the menu.\r\n        var noExplicitWidth = !listRef.current.style.width;\r\n\r\n        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\r\n          var scrollbarSize = \"\".concat(getScrollbarSize(true), \"px\");\r\n          listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\r\n          listRef.current.style.width = \"calc(100% + \".concat(scrollbarSize, \")\");\r\n        }\r\n\r\n        return listRef.current;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  var handleKeyDown = function handleKeyDown(event) {\r\n    var list = listRef.current;\r\n    var key = event.key;\r\n    /**\r\n     * @type {Element} - will always be defined since we are in a keydown handler\r\n     * attached to an element. A keydown event is either dispatched to the activeElement\r\n     * or document.body or document.documentElement. Only the first case will\r\n     * trigger this specific handler.\r\n     */\r\n\r\n    var currentFocus = ownerDocument(list).activeElement;\r\n\r\n    if (key === 'ArrowDown') {\r\n      // Prevent scroll of the page\r\n      event.preventDefault();\r\n      moveFocus(list, currentFocus, disableListWrap, nextItem);\r\n    } else if (key === 'ArrowUp') {\r\n      event.preventDefault();\r\n      moveFocus(list, currentFocus, disableListWrap, previousItem);\r\n    } else if (key === 'Home') {\r\n      event.preventDefault();\r\n      moveFocus(list, null, disableListWrap, nextItem);\r\n    } else if (key === 'End') {\r\n      event.preventDefault();\r\n      moveFocus(list, null, disableListWrap, previousItem);\r\n    } else if (key.length === 1) {\r\n      var criteria = textCriteriaRef.current;\r\n      var lowerKey = key.toLowerCase();\r\n      var currTime = performance.now();\r\n\r\n      if (criteria.keys.length > 0) {\r\n        // Reset\r\n        if (currTime - criteria.lastTime > 500) {\r\n          criteria.keys = [];\r\n          criteria.repeating = true;\r\n          criteria.previousKeyMatched = true;\r\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\r\n          criteria.repeating = false;\r\n        }\r\n      }\r\n\r\n      criteria.lastTime = currTime;\r\n      criteria.keys.push(lowerKey);\r\n      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\r\n\r\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, nextItem, criteria))) {\r\n        event.preventDefault();\r\n      } else {\r\n        criteria.previousKeyMatched = false;\r\n      }\r\n    }\r\n\r\n    if (onKeyDown) {\r\n      onKeyDown(event);\r\n    }\r\n  };\r\n\r\n  var handleOwnRef = React.useCallback(function (instance) {\r\n    // #StrictMode ready\r\n    listRef.current = ReactDOM.findDOMNode(instance);\r\n  }, []);\r\n  var handleRef = useForkRef(handleOwnRef, ref);\r\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\r\n\r\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\r\n  // to check if there is a `selected` item. We're looking for the last `selected`\r\n  // item and use the first valid item as a fallback\r\n\r\n  React.Children.forEach(children, function (child, index) {\r\n    if (!React.isValidElement(child)) {\r\n      return;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: the Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    if (!child.props.disabled) {\r\n      if (variant === 'selectedMenu' && child.props.selected) {\r\n        activeItemIndex = index;\r\n      } else if (activeItemIndex === -1) {\r\n        activeItemIndex = index;\r\n      }\r\n    }\r\n  });\r\n  var items = React.Children.map(children, function (child, index) {\r\n    if (index === activeItemIndex) {\r\n      var newChildProps = {};\r\n\r\n      if (autoFocusItem) {\r\n        newChildProps.autoFocus = true;\r\n      }\r\n\r\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\r\n        newChildProps.tabIndex = 0;\r\n      }\r\n\r\n      if (newChildProps !== null) {\r\n        return React.cloneElement(child, newChildProps);\r\n      }\r\n    }\r\n\r\n    return child;\r\n  });\r\n  return React.createElement(List, _extends({\r\n    role: \"menu\",\r\n    ref: handleRef,\r\n    className: className,\r\n    onKeyDown: handleKeyDown,\r\n    tabIndex: autoFocus ? 0 : -1\r\n  }, other), items);\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes = {\r\n  /**\r\n   * @ignore\r\n   */\r\n  actions: PropTypes.shape({\r\n    current: PropTypes.object\r\n  }),\r\n\r\n  /**\r\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\r\n   * if `variant=\"selectedMenu\"`\r\n   */\r\n  autoFocusItem: PropTypes.bool,\r\n\r\n  /**\r\n   * MenuList contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the menu items will not wrap focus.\r\n   */\r\n  disableListWrap: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default MenuList;"]},"metadata":{},"sourceType":"module"}