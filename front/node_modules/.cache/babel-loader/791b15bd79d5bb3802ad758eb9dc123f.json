{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { deepmerge } from '@material-ui/utils';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport indigo from '../colors/indigo';\nimport pink from '../colors/pink';\nimport red from '../colors/red';\nimport amber from '../colors/amber';\nimport blue from '../colors/blue';\nimport green from '../colors/green';\nimport { darken, getContrastRatio, lighten } from './colorManipulator';\nexport var light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.54)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)',\n    // Text hints.\n    hint: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: grey[50]\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.08)',\n    hoverOpacity: 0.08,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.14)',\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)'\n  }\n};\nexport var dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    hint: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: grey[800],\n    default: '#303030'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.1)',\n    hoverOpacity: 0.1,\n    selected: 'rgba(255, 255, 255, 0.2)',\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)'\n  }\n};\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffset);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffset * 1.5);\n    }\n  }\n}\n\nexport default function createPalette(palette) {\n  var _palette$primary = palette.primary,\n      primary = _palette$primary === void 0 ? {\n    light: indigo[300],\n    main: indigo[500],\n    dark: indigo[700]\n  } : _palette$primary,\n      _palette$secondary = palette.secondary,\n      secondary = _palette$secondary === void 0 ? {\n    light: pink.A200,\n    main: pink.A400,\n    dark: pink.A700\n  } : _palette$secondary,\n      _palette$error = palette.error,\n      error = _palette$error === void 0 ? {\n    light: red[300],\n    main: red[500],\n    dark: red[700]\n  } : _palette$error,\n      _palette$warning = palette.warning,\n      warning = _palette$warning === void 0 ? {\n    light: amber[300],\n    main: amber[500],\n    dark: amber[700]\n  } : _palette$warning,\n      _palette$info = palette.info,\n      info = _palette$info === void 0 ? {\n    light: blue[300],\n    main: blue[500],\n    dark: blue[700]\n  } : _palette$info,\n      _palette$success = palette.success,\n      success = _palette$success === void 0 ? {\n    light: green[300],\n    main: green[500],\n    dark: green[700]\n  } : _palette$success,\n      _palette$type = palette.type,\n      type = _palette$type === void 0 ? 'light' : _palette$type,\n      _palette$contrastThre = palette.contrastThreshold,\n      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,\n      _palette$tonalOffset = palette.tonalOffset,\n      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,\n      other = _objectWithoutProperties(palette, [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\", \"type\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n\n  function getContrastText(background) {\n    if (!background) {\n      throw new TypeError(\"Material-UI: missing background argument in getContrastText(\".concat(background, \").\"));\n    }\n\n    var contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var contrast = getContrastRatio(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([\"Material-UI: the contrast ratio of \".concat(contrast, \":1 for \").concat(contrastText, \" on \").concat(background), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  function augmentColor(color) {\n    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;\n    color = _extends({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!color.main) {\n        throw new Error(['Material-UI: the color provided to augmentColor(color) is invalid.', \"The color object needs to have a `main` property or a `\".concat(mainShade, \"` property.\")].join('\\n'));\n      }\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  }\n\n  var types = {\n    dark: dark,\n    light: light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!types[type]) {\n      console.error(\"Material-UI: the palette type `\".concat(type, \"` is not supported.\"));\n    }\n  }\n\n  var paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: common,\n    // The palette type, can be light or dark.\n    type: type,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor(primary),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor(error),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor(warning),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor(info),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor(success),\n    // The grey colors.\n    grey: grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText: getContrastText,\n    // Generate a rich color object.\n    augmentColor: augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: tonalOffset\n  }, types[type]), other);\n  return paletteOutput;\n}","map":{"version":3,"sources":["C:/Users/flori/Documents/M2-MIAGE/Architecture Orient√©e Service/Projet/bataille_navale/front/node_modules/@material-ui/core/esm/styles/createPalette.js"],"names":["_extends","_objectWithoutProperties","deepmerge","common","grey","indigo","pink","red","amber","blue","green","darken","getContrastRatio","lighten","light","text","primary","secondary","disabled","hint","divider","background","paper","white","default","action","active","hover","hoverOpacity","selected","disabledBackground","dark","icon","addLightOrDark","intent","direction","shade","tonalOffset","hasOwnProperty","main","createPalette","palette","_palette$primary","_palette$secondary","A200","A400","A700","_palette$error","error","_palette$warning","warning","_palette$info","info","_palette$success","success","_palette$type","type","_palette$contrastThre","contrastThreshold","_palette$tonalOffset","other","getContrastText","TypeError","concat","contrastText","process","env","NODE_ENV","contrast","console","join","augmentColor","color","mainShade","arguments","length","undefined","lightShade","darkShade","Error","types","paletteOutput"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport common from '../colors/common';\r\nimport grey from '../colors/grey';\r\nimport indigo from '../colors/indigo';\r\nimport pink from '../colors/pink';\r\nimport red from '../colors/red';\r\nimport amber from '../colors/amber';\r\nimport blue from '../colors/blue';\r\nimport green from '../colors/green';\r\nimport { darken, getContrastRatio, lighten } from './colorManipulator';\r\nexport var light = {\r\n  // The colors used to style the text.\r\n  text: {\r\n    // The most important text.\r\n    primary: 'rgba(0, 0, 0, 0.87)',\r\n    // Secondary text.\r\n    secondary: 'rgba(0, 0, 0, 0.54)',\r\n    // Disabled text have even lower visual prominence.\r\n    disabled: 'rgba(0, 0, 0, 0.38)',\r\n    // Text hints.\r\n    hint: 'rgba(0, 0, 0, 0.38)'\r\n  },\r\n  // The color used to divide different elements.\r\n  divider: 'rgba(0, 0, 0, 0.12)',\r\n  // The background colors used to style the surfaces.\r\n  // Consistency between these values is important.\r\n  background: {\r\n    paper: common.white,\r\n    default: grey[50]\r\n  },\r\n  // The colors used to style the action elements.\r\n  action: {\r\n    // The color of an active action like an icon button.\r\n    active: 'rgba(0, 0, 0, 0.54)',\r\n    // The color of an hovered action.\r\n    hover: 'rgba(0, 0, 0, 0.08)',\r\n    hoverOpacity: 0.08,\r\n    // The color of a selected action.\r\n    selected: 'rgba(0, 0, 0, 0.14)',\r\n    // The color of a disabled action.\r\n    disabled: 'rgba(0, 0, 0, 0.26)',\r\n    // The background color of a disabled action.\r\n    disabledBackground: 'rgba(0, 0, 0, 0.12)'\r\n  }\r\n};\r\nexport var dark = {\r\n  text: {\r\n    primary: common.white,\r\n    secondary: 'rgba(255, 255, 255, 0.7)',\r\n    disabled: 'rgba(255, 255, 255, 0.5)',\r\n    hint: 'rgba(255, 255, 255, 0.5)',\r\n    icon: 'rgba(255, 255, 255, 0.5)'\r\n  },\r\n  divider: 'rgba(255, 255, 255, 0.12)',\r\n  background: {\r\n    paper: grey[800],\r\n    default: '#303030'\r\n  },\r\n  action: {\r\n    active: common.white,\r\n    hover: 'rgba(255, 255, 255, 0.1)',\r\n    hoverOpacity: 0.1,\r\n    selected: 'rgba(255, 255, 255, 0.2)',\r\n    disabled: 'rgba(255, 255, 255, 0.3)',\r\n    disabledBackground: 'rgba(255, 255, 255, 0.12)'\r\n  }\r\n};\r\n\r\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\r\n  if (!intent[direction]) {\r\n    if (intent.hasOwnProperty(shade)) {\r\n      intent[direction] = intent[shade];\r\n    } else if (direction === 'light') {\r\n      intent.light = lighten(intent.main, tonalOffset);\r\n    } else if (direction === 'dark') {\r\n      intent.dark = darken(intent.main, tonalOffset * 1.5);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function createPalette(palette) {\r\n  var _palette$primary = palette.primary,\r\n      primary = _palette$primary === void 0 ? {\r\n    light: indigo[300],\r\n    main: indigo[500],\r\n    dark: indigo[700]\r\n  } : _palette$primary,\r\n      _palette$secondary = palette.secondary,\r\n      secondary = _palette$secondary === void 0 ? {\r\n    light: pink.A200,\r\n    main: pink.A400,\r\n    dark: pink.A700\r\n  } : _palette$secondary,\r\n      _palette$error = palette.error,\r\n      error = _palette$error === void 0 ? {\r\n    light: red[300],\r\n    main: red[500],\r\n    dark: red[700]\r\n  } : _palette$error,\r\n      _palette$warning = palette.warning,\r\n      warning = _palette$warning === void 0 ? {\r\n    light: amber[300],\r\n    main: amber[500],\r\n    dark: amber[700]\r\n  } : _palette$warning,\r\n      _palette$info = palette.info,\r\n      info = _palette$info === void 0 ? {\r\n    light: blue[300],\r\n    main: blue[500],\r\n    dark: blue[700]\r\n  } : _palette$info,\r\n      _palette$success = palette.success,\r\n      success = _palette$success === void 0 ? {\r\n    light: green[300],\r\n    main: green[500],\r\n    dark: green[700]\r\n  } : _palette$success,\r\n      _palette$type = palette.type,\r\n      type = _palette$type === void 0 ? 'light' : _palette$type,\r\n      _palette$contrastThre = palette.contrastThreshold,\r\n      contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,\r\n      _palette$tonalOffset = palette.tonalOffset,\r\n      tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,\r\n      other = _objectWithoutProperties(palette, [\"primary\", \"secondary\", \"error\", \"warning\", \"info\", \"success\", \"type\", \"contrastThreshold\", \"tonalOffset\"]); // Use the same logic as\r\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\r\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\r\n\r\n\r\n  function getContrastText(background) {\r\n    if (!background) {\r\n      throw new TypeError(\"Material-UI: missing background argument in getContrastText(\".concat(background, \").\"));\r\n    }\r\n\r\n    var contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      var contrast = getContrastRatio(background, contrastText);\r\n\r\n      if (contrast < 3) {\r\n        console.error([\"Material-UI: the contrast ratio of \".concat(contrast, \":1 for \").concat(contrastText, \" on \").concat(background), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    return contrastText;\r\n  }\r\n\r\n  function augmentColor(color) {\r\n    var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\r\n    var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\r\n    var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;\r\n    color = _extends({}, color);\r\n\r\n    if (!color.main && color[mainShade]) {\r\n      color.main = color[mainShade];\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!color.main) {\r\n        throw new Error(['Material-UI: the color provided to augmentColor(color) is invalid.', \"The color object needs to have a `main` property or a `\".concat(mainShade, \"` property.\")].join('\\n'));\r\n      }\r\n    }\r\n\r\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\r\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\r\n\r\n    if (!color.contrastText) {\r\n      color.contrastText = getContrastText(color.main);\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  var types = {\r\n    dark: dark,\r\n    light: light\r\n  };\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!types[type]) {\r\n      console.error(\"Material-UI: the palette type `\".concat(type, \"` is not supported.\"));\r\n    }\r\n  }\r\n\r\n  var paletteOutput = deepmerge(_extends({\r\n    // A collection of common colors.\r\n    common: common,\r\n    // The palette type, can be light or dark.\r\n    type: type,\r\n    // The colors used to represent primary interface elements for a user.\r\n    primary: augmentColor(primary),\r\n    // The colors used to represent secondary interface elements for a user.\r\n    secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),\r\n    // The colors used to represent interface elements that the user should be made aware of.\r\n    error: augmentColor(error),\r\n    // The colors used to represent potentially dangerous actions or important messages.\r\n    warning: augmentColor(warning),\r\n    // The colors used to present information to the user that is neutral and not necessarily important.\r\n    info: augmentColor(info),\r\n    // The colors used to indicate the successful completion of an action that user triggered.\r\n    success: augmentColor(success),\r\n    // The grey colors.\r\n    grey: grey,\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: contrastThreshold,\r\n    // Takes a background color and returns the text color that maximizes the contrast.\r\n    getContrastText: getContrastText,\r\n    // Generate a rich color object.\r\n    augmentColor: augmentColor,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: tonalOffset\r\n  }, types[type]), other);\r\n  return paletteOutput;\r\n}"]},"metadata":{},"sourceType":"module"}